#include <stdio.h>
#include <math.h>

int main() {
	printf("---Bisection Metodu ile Kok Bulma---\n\n");//Bisection metodu belirli aralikta denklemin kökünü bulma işlemidir.
	float kupk,hatapayi,karek,xk,sabitk,ek=0,eb=0,fonksiyon,aradeger,yenifark,sonuc=0,fonk,fonks;//Burada kullanacagımız degiskenlerimizi tanımladık
	printf("Lutfen buyuk olan deger araligini giriniz: ");//Klavyeden en buyuk ve en kucuk deger aralıgını alma islemini scanf fonksiyonu ile meydana getiriyoruz
	scanf("%f",&eb);
	printf("Lutfen kucuk olan deger araligini giriniz: ");
	scanf("%f",&ek);
	if(ek>=eb)//Eger burada aralıklar ters ya da esit girilmis ise program mesajini verip sona erer
	{
		printf("Deger araliklari esit ya da yanlis girilmistir.\nLutfen programi yeniden baslatip deger araliklarini dogru sekilde giriniz.");
	}
	else//Eger araliklar dogru girilmis ise kaldigi yerden devam eder
	{
	printf("X'in kubunun katsayisini giriniz: ");//Burada katsayilari ve hata payini klavyeden scanf fonksiyonu ile cekiyoruz.
	scanf("%f",&kupk);
	printf("X'in karesinin katsayisini giriniz: ");
	scanf("%f",&karek);
	printf("X'in katsayisini giriniz: ");
	scanf("%f",&xk);
	printf("Sabit sayiyi giriniz: ");
	scanf("%f",&sabitk);
	fonk=kupk*(pow(ek,3))+karek*(pow(ek,2))+xk*ek+sabitk;//Burada en büyük ve en kucuk deger araligimizi fonksiyona koyulmustur
	fonks=kupk*(pow(eb,3))+karek*(pow(eb,2))+xk*eb+sabitk;
	if(fonk>0 || fonks<0)//Burada ise kök aralığı kontrolü yapılmaktadır.Eger istenilen kok aralikta degilse program mesajini verip sona erecektir.
	{
		printf("Girilen aralikta kok bulunamamistir..");
	}
	else//Degilse kaldigi yerden devam ediyor.
        {
		printf("Hata payini giriniz: ");//Eger girilen deger araliginda bir kok var ise hata payini klavyeden alir.
	    scanf("%f",&hatapayi);
	    if(hatapayi==0)
        {
            printf("Hata payi 0 girilmelidir");
        }
        else
        {
    	aradeger=(ek+eb)/2;
        yenifark=eb-ek;//Burada en büyük deger ile en kücük deger arasindaki farki aliyoruz eger bu degeri almazsak program yenifarka bir sayi verir(1 degerini atar)
        while(yenifark>hatapayi)//Burada girmis oldugumuz hata payina kadar kok araligini kisaltacaktir yani yenifarkimiz hatapayina esit veya kucuk olana kadar doner
        {//Asagidaki fonksiyonda, aradegeri fonksiyona koyup aradegeri en kucuge yada en buyuge atayarak kok araligini kücültüyoruz
		fonksiyon=kupk*(pow(aradeger,3))+karek*(pow(aradeger,2))+xk*aradeger+sabitk;
		if(fonksiyon<0)//Eger bu fonksiyon 0'dan kucukse bu aradeger en kucuk degiskenine atanir ve yenifarkimiz en kucuk degiseceginden degisir
		{
			ek=aradeger;
			yenifark=eb-ek;
		}
		else if(fonksiyon>0)//Eger bu fonksiyon 0'dan buyukse bu aradeger en kucuk degiskenine atanir ve yenifarkimiz en buyuk degiseceginden degisir
		{
			eb=aradeger;
			yenifark=eb-ek;
		}
		aradeger=(ek+eb)/2;//Ara degerimiz en kucuk ve en buyuk surekli degiseceginden her dongude yeni degerini alip fonksiyona koyulmaya devam eder
	    }
    	printf("Kokunuz : %.3f \n",aradeger);
        }
        }
    }
	return 0;
}
